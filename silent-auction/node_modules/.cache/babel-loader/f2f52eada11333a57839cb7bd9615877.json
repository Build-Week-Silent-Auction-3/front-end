{"ast":null,"code":"var _jsxFileName = \"/Users/genardivanteajno/Documents/Git Projects/front-end/silent-auction/src/components/AuctionCard.js\";\nimport React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport Styled from 'styled-components';\nimport axiosWithAuth from './axiosWithAuth';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nconst StyledButton = Styled.button`\n&:hover{\n    cursor: pointer;\n}\n`;\n\nconst RegisterColapse = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n  const [signup, setSignup] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onSubmit = () => {// axiosWithAuth()\n    //     .post(\"/auth/register\", signup)\n    //     .then(res => {\n    //         console.log(\"my response from register :\", res);\n    //         localStorage.setItem(\"token\", res.data.token);\n    //         history.push(\"/dashboard\");\n    //     })\n    //     .catch(err => {console.log(\"error with register post :\", err)});\n  };\n\n  const changeHandler = elem => {\n    setSignup({ ...signup,\n      [elem.target.name]: elem.target.value\n    });\n  };\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-container\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"1% 30% 0 30%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      backgroundColor: \"#3e444a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"dark\",\n    onClick: toggle,\n    style: {\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \" Don 't have an Account?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 36\n    }\n  }), \" Sign Up!\"), \" \"), \" \", /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0 20% 0 20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignContent: \"center\",\n      margin: \"0 0 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: \"White\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \" Enter a New Username \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 34\n    }\n  }, \" \"), \"(This is what you'll log in with)\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    onChange: changeHandler,\n    style: {\n      margin: \"0 0 5% 0\"\n    },\n    input: true,\n    type: \"text\",\n    ref: register({\n      required: true,\n      minLength: 6\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), \" \", errors.username && errors.username.type === 'minLength' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 74\n    }\n  }, \"This field requires a Minimum length of 6 characters \"), \" \", errors.username && errors.username.type === 'required' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 73\n    }\n  }, \"This field is required \"), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: \"White\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \" Create a Password \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 31\n    }\n  }, \" \"), \"(Minimum of 6 characters)\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    onChange: changeHandler,\n    style: {\n      margin: \"0 0 5% 0\"\n    },\n    ref: register({\n      required: true,\n      minLength: 6\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), \" \", errors.password && errors.password.type === 'minLength' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 74\n    }\n  }, \"This field requires a Minimum length of 6 characters \"), \" \", errors.password && errors.password.type === 'required' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 73\n    }\n  }, \"This field is required \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submitButton\",\n    style: {\n      margin: \"10% 0 0 0\",\n      borderRadius: \"5px\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \" Finish \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \");\n};\n\nexport default RegisterColapse;","map":{"version":3,"sources":["/Users/genardivanteajno/Documents/Git Projects/front-end/silent-auction/src/components/AuctionCard.js"],"names":["React","useState","Collapse","Button","CardBody","Card","Styled","axiosWithAuth","useForm","useHistory","StyledButton","button","RegisterColapse","props","isOpen","setIsOpen","register","handleSubmit","errors","history","signup","setSignup","username","password","onSubmit","changeHandler","elem","target","name","value","toggle","width","height","padding","display","flexDirection","justifyContent","backgroundColor","marginBottom","margin","alignContent","color","required","minLength","type","borderRadius"],"mappings":"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","sourcesContent":["import React, {\n    useState\n} from 'react';\nimport {\n    Collapse,\n    Button,\n    CardBody,\n    Card\n} from 'reactstrap';\nimport Styled from 'styled-components';\nimport axiosWithAuth from './axiosWithAuth';\nimport {\n    useForm\n} from \"react-hook-form\";\nimport {\n    useHistory\n} from 'react-router-dom';\n\nconst StyledButton = Styled.button `\n&:hover{\n    cursor: pointer;\n}\n`\n\n\nconst RegisterColapse = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const {\n        register,\n        handleSubmit,\n        errors\n    } = useForm()\n    const history = useHistory()\n    const [signup, setSignup] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n\n    const onSubmit = () => {\n        // axiosWithAuth()\n        //     .post(\"/auth/register\", signup)\n        //     .then(res => {\n        //         console.log(\"my response from register :\", res);\n        //         localStorage.setItem(\"token\", res.data.token);\n        //         history.push(\"/dashboard\");\n        //     })\n        //     .catch(err => {console.log(\"error with register post :\", err)});\n    }\n\n\n    const changeHandler = elem => {\n        setSignup({\n            ...signup,\n            [elem.target.name]: elem.target.value\n        });\n    }\n\n\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return ( <\n        div className = \"register-container\"\n        style = {\n            {\n                width: \"100%\",\n                height: \"100%\"\n            }\n        } >\n        <\n        div style = {\n            {\n                padding: \"1% 30% 0 30%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                backgroundColor: \"#3e444a\"\n            }\n        } >\n        <\n        div style = {\n            {\n                display: \"flex\",\n                justifyContent: \"center\"\n            }\n        } >\n        <\n        Button color = \"dark\"\n        onClick = {\n            toggle\n        }\n        style = {\n            {\n                marginBottom: '1rem',\n            }\n        } > Don 't have an Account?<br></br> Sign Up!</Button> <\n        /div> <\n        Collapse isOpen = {\n            isOpen\n        } >\n        <\n        div style = {\n            {}\n        } >\n        <\n        Card color = \"dark\" >\n        <\n        div style = {\n            {}\n        } >\n        <\n        CardBody color = \"dark\" >\n        <\n        div style = {\n            {\n                margin: \"0 20% 0 20%\"\n            }\n        } >\n        <\n        form onSubmit = {\n            handleSubmit(onSubmit)\n        }\n        style = {\n            {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignContent: \"center\",\n                margin: \"0 0 0 0\"\n            }\n        } >\n\n        {\n            /* <label style={{color:\"White\",}}>What's your Email Address?<br></br>(Your email be kept <span style={{textDecoration:\"underline\",fontWeight:\"bold\"}}>private</span>)</label>\n                                <input\n                                style={{margin:\"0 0 5% 0\"}}\n                                /> */\n        } <\n        label style = {\n            {\n                color: \"White\",\n            }\n        } > Enter a New Username < br > < /br>(This is what you'll log in with)</label >\n        <\n        input name = \"username\"\n        type = \"text\"\n        onChange = {\n            changeHandler\n        }\n        style = {\n            {\n                margin: \"0 0 5% 0\"\n            }\n        }\n        input type = \"text\"\n        ref = {\n            register({\n                required: true,\n                minLength: 6\n            })\n        }\n        /> {\n            errors.username && errors.username.type === 'minLength' && ( <\n                p style = {\n                    {\n                        color: \"red\"\n                    }\n                } >\n                This field requires a Minimum length of 6 characters <\n                /p>\n            )\n        } {\n            errors.username && errors.username.type === 'required' && ( <\n                p style = {\n                    {\n                        color: \"red\"\n                    }\n                } >\n                This field is required <\n                /p>\n            )\n        } <\n        label style = {\n            {\n                color: \"White\",\n            }\n        } > Create a Password < br > < /br>(Minimum of 6 characters)</label >\n        <\n        input name = \"password\"\n        type = \"password\"\n        onChange = {\n            changeHandler\n        }\n        style = {\n            {\n                margin: \"0 0 5% 0\"\n            }\n        }\n        ref = {\n            register({\n                required: true,\n                minLength: 6\n            })\n        }\n        /> {\n            errors.password && errors.password.type === 'minLength' && ( <\n                p style = {\n                    {\n                        color: \"red\"\n                    }\n                } >\n                This field requires a Minimum length of 6 characters <\n                /p>\n            )\n        } {\n            errors.password && errors.password.type === 'required' && ( <\n                p style = {\n                    {\n                        color: \"red\"\n                    }\n                } >\n                This field is required <\n                /p>\n            )\n        }\n\n\n        {\n            /* <label style={{margin:\"1% 0 1% 0\", color:\"white\", display:\"flex\", justifyContent:\"flexStart\"}}>Security Question:</label>\n                                <select style={{margin:\"1% 0 1% 0\"}}> \n                                    <option>What was your childhood nickname?</option>\n                                    <option>In what city did you meet your spouse/significant other?</option>\n                                    <option>What is the name of your favorite childhood friend?</option>\n                                    <option>What street did you live on in third grade?</option>\n                                    <option>What is the middle name of your youngest child?</option>\n                                    <option>What is the middle name of your oldest sibling?</option>\n                                    <option>What school did you attend for sixth grade?</option>\n                                    <option>What was the name of your first stuffed animal?</option>\n                                    <option>In what city or town did your mather and father meet?</option>\n                                </select>\n                                <input \n                                type=\"text\" */\n        } <\n        button type = \"submit\"\n        className = \"submitButton\"\n        style = {\n            {\n                margin: \"10% 0 0 0\",\n                borderRadius: \"5px\",\n                width: \"100%\"\n            }\n        } > Finish < /button> <\n        /form> <\n        /div> <\n        /CardBody> <\n        /div> <\n        /Card> <\n        /div> <\n        /Collapse> <\n        /div> <\n        /div>\n    );\n}\n\nexport default RegisterColapse;"]},"metadata":{},"sourceType":"module"}