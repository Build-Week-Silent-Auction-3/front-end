{"ast":null,"code":"var _jsxFileName = \"/Users/genardivanteajno/Documents/Git Projects/front-end/silent-auction/src/components/Login.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form'; // Test\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Login as Buyer or Seller\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"buyer\",\n    name: \"client\",\n    value: \"buyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"buyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Buyer\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"seller\",\n    name: \"client\",\n    value: \"seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Seller\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 51\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"User Name: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\" // defaultValue=\"test\" ref={register}  // register the username input\n    ,\n    ref: register({\n      required: true\n    }) // include the 'required' option\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, \"A user name is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 71\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Password: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"A password is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Email: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }\n  }, \"Please provide a valid email address.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 81\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Log In\"));\n};\n\nexport default Login; // LOGIN PAGE\n// { USEFORM } FROM 'REACT-HOOK-FORM'? (FAST + EASY VALIDATION!)\n// <FORM>\n// LOGIN AS BUYER OR SELLER\n// USERNAME \n// PASSWORD\n//EMAIL\n// 'LOG IN' BUTTON\n// </FORM>\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"minLength\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"required\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}","map":{"version":3,"sources":["/Users/genardivanteajno/Documents/Git Projects/front-end/silent-auction/src/components/Login.js"],"names":["React","useForm","Login","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","username","password","email"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form'\n// Test\nconst Login = () => {\n\n    const { register, handleSubmit, watch, errors } = useForm()\n    const onSubmit = data => { console.log(data) }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            {/* // 'handleSubmit' will validate your inputs before invoking 'onSubmit' */}\n\n            <p>Login as Buyer or Seller</p>\n            <input type=\"radio\" id=\"buyer\" name=\"client\" value=\"buyer\" />\n            <label htmlFor=\"buyer\">Buyer</label>&nbsp;\n\n            <input type=\"radio\" id=\"seller\" name=\"client\" value=\"seller\" />\n            <label htmlFor=\"seller\">Seller</label><br /><br />\n\n            <label htmlFor='username'>User Name: &nbsp;</label>\n            {/* Insert form validation for username control */}\n            <input\n                type='text'\n                name='username'\n                id='username'\n                // defaultValue=\"test\" ref={register}  // register the username input\n                ref={register({ required: true })}  // include the 'required' option\n            />\n            <br />\n            {errors.username && <span>A user name is required.</span>}<br />\n\n            <label htmlFor='password'>Password: &nbsp;</label>\n            <input \n            type='password' \n            name='password' \n            id='password' \n            ref={register({ required: true })}\n            /> <br />\n\n            {errors.password && <span>A password is required.</span>}<br />\n             <br />\n\n            <label htmlFor='email'>Email: &nbsp;</label>\n            <input \n            type='text' \n            name='email' \n            id='email' \n            ref={register({ required: true })}\n            /> <br />\n            {errors.email && <span>Please provide a valid email address.</span>}<br />\n            <br /> <br />\n\n            <button type='submit'>Log In</button>\n        </form>\n    );\n}\n\nexport default Login\n\n\n// LOGIN PAGE\n\n// { USEFORM } FROM 'REACT-HOOK-FORM'? (FAST + EASY VALIDATION!)\n\n// <FORM>\n// LOGIN AS BUYER OR SELLER\n// USERNAME \n// PASSWORD\n//EMAIL\n// 'LOG IN' BUTTON\n// </FORM>\n\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"minLength\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"required\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n\n"]},"metadata":{},"sourceType":"module"}