{"ast":null,"code":"var _jsxFileName = \"/home/allan/web30/bw/front-end/silent-auction/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport './login.css'; // Test\n\nconst Login = () => {\n  // 'handleSubmit' will validate your inputs before invoking 'onSubmit'\n  // Default data\n  const initialLogin = {\n    name: '',\n    password: '',\n    email: ''\n  };\n  const [login, setLogin] = useState(initialLogin);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // handle form submissions\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/users/login', data).then(res => {\n      localStorage.setItem('token', res.data.payload);\n      this.props.history.push('/protected');\n    }).catch(err => console.log(err));\n  }; // handle changes in data on the form\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLogin({ ...login,\n      [name]: value\n    });\n  }; // create and return the form\n\n\n  return (\n    /*#__PURE__*/\n    // Custom Login form\n    React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Name: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"username\",\n      value: login.name,\n      onChange: handleChange // defaultValue=\"test\" ref={register}  // register the username input\n      ,\n      ref: register({\n        required: true\n      }) // include the 'required' option\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, errors.name && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }\n    }, \"A user name is required.\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Password: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: login.password,\n      onChange: handleChange,\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, errors.password && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }\n    }, \"A password is required.\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Email: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      value: login.email,\n      onChange: handleChange,\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, errors.email && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"Please provide a valid email address.\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Log In\"))\n  );\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/allan/web30/bw/front-end/silent-auction/src/components/Login.js"],"names":["React","useState","useForm","axiosWithAuth","Login","initialLogin","name","password","email","login","setLogin","register","handleSubmit","errors","onSubmit","data","e","preventDefault","post","then","res","localStorage","setItem","payload","props","history","push","catch","err","console","log","handleChange","value","target","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { axiosWithAuth } from '../utils/axiosWithAuth'\nimport './login.css'\n\n// Test\nconst Login = () => {\n    // 'handleSubmit' will validate your inputs before invoking 'onSubmit'\n    // Default data\n    const initialLogin = { name: '', password: '', email: '' }\n\n    const [login, setLogin] = useState(initialLogin)\n    const { register, handleSubmit, errors } = useForm()\n\n    // handle form submissions\n    const onSubmit = (data, e) => {\n        e.preventDefault();\n        axiosWithAuth()\n            .post('/api/users/login', data)\n            .then(res => {\n                localStorage.setItem('token', res.data.payload);\n                this.props.history.push('/protected');\n            })\n            .catch(err => console.log(err))\n    }\n\n    // handle changes in data on the form\n    const handleChange = e => {\n        const { name, value } = e.target\n        setLogin({\n            ...login,\n            [name]: value\n        });\n    };\n\n    // create and return the form\n    return (\n        // Custom Login form\n        <form onSubmit={handleSubmit(onSubmit)}>\n\n            {/* Name */}<br /><br />\n            <label htmlFor='name'>Name: &nbsp;</label>\n            <input\n                type='text'\n                name='name'\n                id='username'\n                value={login.name}\n                onChange={handleChange}\n                // defaultValue=\"test\" ref={register}  // register the username input\n                ref={register({ required: true })}  // include the 'required' option\n            />\n            {/* Display username errors */}\n            <p>{errors.name && <span className=\"error-text\">A user name is required.</span>}</p>\n\n            {/* Password */}\n            <label htmlFor='password'>Password: &nbsp;</label>\n            <input\n                type='password'\n                name='password'\n                id='password'\n                value={login.password}\n                onChange={handleChange}\n                ref={register({ required: true })}\n            />\n            {/* Display password errors */}\n            <p>{errors.password && <span className='error-text'>A password is required.</span>}</p>\n\n            {/* Email address */}\n            <label htmlFor='email'>Email: &nbsp;</label>\n            <input\n                type='text'\n                name='email'\n                id='email'\n                value={login.email}\n                onChange={handleChange}\n                ref={register({ required: true })}\n            />\n            {/* Display email address errors */}\n            <p>{errors.email && <span className='error-text'>Please provide a valid email address.</span>}</p>\n\n            {/* Submit button */}<br /> <br />\n            <button type='submit'>Log In</button>\n        </form >\n    );\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}