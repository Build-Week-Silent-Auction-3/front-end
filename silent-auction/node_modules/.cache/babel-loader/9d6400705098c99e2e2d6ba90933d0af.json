{"ast":null,"code":"var _jsxFileName = \"/home/allan/web30/bw/front-end/silent-auction/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { axiosWithAuth } from '../utils/axiosWithAuth'; // Test\n\nconst Login = () => {\n  // Default data\n  const initialLogin = {\n    username: '',\n    password: ''\n  };\n  const [login, setLogin] = useState(initialLogin);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/users/login', data).then(res => {\n      localStorage.setItem('token', res.data.payload);\n      this.props.history.push('/protected');\n    }).catch(err => console.log(err));\n  };\n\n  const handleChange = e => {\n    setLogin({ ...login,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // Custom Login form\n    React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Login as Bidder or Seller\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"buyer\",\n      name: \"client\",\n      value: \"buyer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"buyer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Bidder\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"seller\",\n      name: \"client\",\n      value: \"seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Seller\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"User Name: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      value: login.username,\n      onChange: handleChange // defaultValue=\"test\" ref={register}  // register the username input\n      ,\n      ref: register({\n        required: true\n      }) // include the 'required' option\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), errors.username && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, \"A user name is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Password: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: login.password,\n      onChange: handleChange,\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, \"A password is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Email: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 30\n      }\n    }, \"Please provide a valid email address.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Log In\"))\n  );\n};\n\nexport default Login; // LOGIN PAGE\n// { USEFORM } FROM 'REACT-HOOK-FORM'? (FAST + EASY VALIDATION!)\n// <FORM>\n// LOGIN AS BUYER OR SELLER\n// USERNAME \n// PASSWORD\n//EMAIL\n// 'LOG IN' BUTTON\n// </FORM>\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"minLength\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"required\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}","map":{"version":3,"sources":["/home/allan/web30/bw/front-end/silent-auction/src/components/Login.js"],"names":["React","useState","useForm","axiosWithAuth","Login","initialLogin","username","password","login","setLogin","register","handleSubmit","errors","onSubmit","data","e","preventDefault","post","then","res","localStorage","setItem","payload","props","history","push","catch","err","console","log","handleChange","target","name","value","required","email"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { axiosWithAuth } from '../utils/axiosWithAuth'\n\n// Test\nconst Login = () => {\n    // Default data\n    const initialLogin = { username: '', password: '' }\n\n    const [login, setLogin] = useState(initialLogin)\n    const { register, handleSubmit, errors } = useForm()\n\n    const onSubmit = (data, e) => {\n        e.preventDefault();\n        axiosWithAuth()\n            .post('/api/users/login', data)\n            .then(res => {\n                localStorage.setItem('token', res.data.payload);\n                this.props.history.push('/protected');\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleChange = e => {\n        setLogin({\n            ...login,\n            [e.target.name]: e.target.value\n        });\n    };\n\n\n    return (\n        // Custom Login form\n        <form onSubmit={handleSubmit(onSubmit)}>\n            {/* // 'handleSubmit' will validate your inputs before invoking 'onSubmit' */}\n            <p>Login as Bidder or Seller</p>\n            {/* Bidder */}\n            <input type=\"radio\" id=\"buyer\" name=\"client\" value=\"buyer\" />\n            <label htmlFor=\"buyer\">Bidder</label>&nbsp;\n\n            {/* Seller */}\n            <input type=\"radio\" id=\"seller\" name=\"client\" value=\"seller\" />\n            <label htmlFor=\"seller\">Seller</label>\n\n            {/* Username */}<br /><br />\n            <label htmlFor='username'>User Name: &nbsp;</label>\n            <input\n                type='text'\n                name='username'\n                id='username'\n                value={login.username}\n                onChange={handleChange}\n                // defaultValue=\"test\" ref={register}  // register the username input\n                ref={register({ required: true })}  // include the 'required' option\n            />\n            <br />\n            {/* Insert form validation for username control */}\n            {errors.username && <span>A user name is required.</span>}\n\n            {/* Password */}<br />\n            <label htmlFor='password'>Password: &nbsp;</label>\n            <input\n                type='password'\n                name='password'\n                id='password'\n                value={login.password}\n                onChange={handleChange}\n                ref={register({ required: true })}\n            /> <br />\n\n            {errors.password && <span>A password is required.</span>}\n\n            {/* Email address */}<br />\n            <label htmlFor='email'>Email: &nbsp;</label>\n            <input\n                type='text'\n                name='email'\n                id='email'\n                ref={register({ required: true })}\n            /> <br />\n            {errors.email && <span>Please provide a valid email address.</span>}\n\n            {/* Submit button */}<br /> <br />\n            <button type='submit'>Log In</button>\n        </form >\n    );\n}\n\nexport default Login\n\n\n// LOGIN PAGE\n\n// { USEFORM } FROM 'REACT-HOOK-FORM'? (FAST + EASY VALIDATION!)\n\n// <FORM>\n// LOGIN AS BUYER OR SELLER\n// USERNAME \n// PASSWORD\n//EMAIL\n// 'LOG IN' BUTTON\n// </FORM>\n\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"minLength\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"required\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n\n"]},"metadata":{},"sourceType":"module"}