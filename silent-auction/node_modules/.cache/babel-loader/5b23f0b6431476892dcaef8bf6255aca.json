{"ast":null,"code":"var _jsxFileName = \"/Users/genardivanteajno/Documents/Git Projects/front-end/silent-auction/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nconst initialLogin = {\n  username: '',\n  password: ''\n}; // Test\n\nconst Login = () => {\n  const [login, setLogin] = useState(initialLogin);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/users/login', data).then(res => {\n      localStorage.setItem('token', res.data.payload);\n      this.props.history.push('/protected');\n    }).catch(err => console.log(err));\n  };\n\n  const handleChange = e => {\n    setLogin({ ...login,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Login as Buyer or Seller\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"buyer\",\n    name: \"client\",\n    value: \"buyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"buyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Buyer\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"seller\",\n    name: \"client\",\n    value: \"seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Seller\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 51\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"User Name: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    value: login.username,\n    onChange: handleChange // defaultValue=\"test\" ref={register}  // register the username input\n    ,\n    ref: register({\n      required: true\n    }) // include the 'required' option\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, \"A user name is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 71\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Password: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: login.password,\n    onChange: handleChange,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \"A password is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Email: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }\n  }, \"Please provide a valid email address.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 81\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Log In\"));\n};\n\nexport default Login; // LOGIN PAGE\n// { USEFORM } FROM 'REACT-HOOK-FORM'? (FAST + EASY VALIDATION!)\n// <FORM>\n// LOGIN AS BUYER OR SELLER\n// USERNAME \n// PASSWORD\n//EMAIL\n// 'LOG IN' BUTTON\n// </FORM>\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"minLength\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"required\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}","map":{"version":3,"sources":["/Users/genardivanteajno/Documents/Git Projects/front-end/silent-auction/src/components/Login.js"],"names":["React","useState","useForm","axiosWithAuth","initialLogin","username","password","Login","login","setLogin","register","handleSubmit","watch","errors","onSubmit","data","e","preventDefault","post","then","res","localStorage","setItem","payload","props","history","push","catch","err","console","log","handleChange","target","name","value","required","email"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { axiosWithAuth } from '../utils/axiosWithAuth'\n\nconst initialLogin = {\n    username: '',\n    password: ''\n}\n\n// Test\nconst Login = () => {\n    const [login, setLogin] = useState(initialLogin)\n    const { register, handleSubmit, watch, errors } = useForm()\n\n    const onSubmit = (data, e) => {\n        e.preventDefault();\n        axiosWithAuth()\n            .post('/api/users/login', data)\n            .then(res => {\n                localStorage.setItem('token', res.data.payload);\n                this.props.history.push('/protected');\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleChange = e => {\n        setLogin({\n            ...login,\n            [e.target.name]: e.target.value\n        });\n    };\n\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            {/* // 'handleSubmit' will validate your inputs before invoking 'onSubmit' */}\n\n            <p>Login as Buyer or Seller</p>\n            <input type=\"radio\" id=\"buyer\" name=\"client\" value=\"buyer\" />\n            <label htmlFor=\"buyer\">Buyer</label>&nbsp;\n\n            <input type=\"radio\" id=\"seller\" name=\"client\" value=\"seller\" />\n            <label htmlFor=\"seller\">Seller</label><br /><br />\n\n            <label htmlFor='username'>User Name: &nbsp;</label>\n            {/* Insert form validation for username control */}\n            <input\n                type='text'\n                name='username'\n                id='username'\n                value={login.username}\n                onChange={handleChange}\n                // defaultValue=\"test\" ref={register}  // register the username input\n                ref={register({ required: true })}  // include the 'required' option\n            />\n            <br />\n            {errors.username && <span>A user name is required.</span>}<br />\n\n            <label htmlFor='password'>Password: &nbsp;</label>\n            <input \n            type='password' \n            name='password' \n            id='password' \n            value={login.password}\n            onChange={handleChange}\n            ref={register({ required: true })}\n            /> <br />\n\n            {errors.password && <span>A password is required.</span>}<br />\n             <br />\n\n            <label htmlFor='email'>Email: &nbsp;</label>\n            <input \n            type='text' \n            name='email' \n            id='email' \n            ref={register({ required: true })}\n            /> <br />\n            {errors.email && <span>Please provide a valid email address.</span>}<br />\n            <br /> <br />\n\n            <button type='submit'>Log In</button>\n        </form>\n    );\n}\n\nexport default Login\n\n\n// LOGIN PAGE\n\n// { USEFORM } FROM 'REACT-HOOK-FORM'? (FAST + EASY VALIDATION!)\n\n// <FORM>\n// LOGIN AS BUYER OR SELLER\n// USERNAME \n// PASSWORD\n//EMAIL\n// 'LOG IN' BUTTON\n// </FORM>\n\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"minLength\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n\n// EXAMPLE OF VALIDATION WITH USEFORM: \n// {errors.username && errors.username.type === \"required\" && (\n//    <p> This field requires a minimum length of 3 characters. </p> \n// )}\n\n"]},"metadata":{},"sourceType":"module"}