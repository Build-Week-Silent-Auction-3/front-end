{"ast":null,"code":"var _jsxFileName = \"/home/allan/web30/bw/front-end/silent-auction/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport './login.css'; // Test\n\nconst Login = () => {\n  // 'handleSubmit' will validate your inputs before invoking 'onSubmit'\n  // Default data\n  const initialLogin = {\n    username: '',\n    password: '',\n    email: ''\n  };\n  const [login, setLogin] = useState(initialLogin);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // handle form submissions\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/users/login', data).then(res => {\n      localStorage.setItem('token', res.data.payload);\n      this.props.history.push('/protected');\n    }).catch(err => console.log(err));\n  }; // handle changes in data on the form\n\n\n  const handleChange = e => {\n    setLogin({ ...login,\n      [e.target.name]: e.target.value\n    });\n  }; // create and return the form\n\n\n  return (\n    /*#__PURE__*/\n    // Custom Login form\n    React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"User Name: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      value: login.username,\n      onChange: handleChange // defaultValue=\"test\" ref={register}  // register the username input\n      ,\n      ref: register({\n        required: true\n      }) // include the 'required' option\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 44\n      }\n    }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, \"A user name is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Password: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: login.password,\n      onChange: handleChange,\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 44\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"A password is required.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Email: \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 49\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }\n    }, \"Please provide a valid email address.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 34\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Log In\"))\n  );\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/allan/web30/bw/front-end/silent-auction/src/components/Login.js"],"names":["React","useState","useForm","axiosWithAuth","Login","initialLogin","username","password","email","login","setLogin","register","handleSubmit","errors","onSubmit","data","e","preventDefault","post","then","res","localStorage","setItem","payload","props","history","push","catch","err","console","log","handleChange","target","name","value","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { axiosWithAuth } from '../utils/axiosWithAuth'\nimport './login.css'\n\n// Test\nconst Login = () => {\n    // 'handleSubmit' will validate your inputs before invoking 'onSubmit'\n    // Default data\n    const initialLogin = { username: '', password: '', email: '' }\n\n    const [login, setLogin] = useState(initialLogin)\n    const { register, handleSubmit, errors } = useForm()\n\n    // handle form submissions\n    const onSubmit = (data, e) => {\n        e.preventDefault();\n        axiosWithAuth()\n            .post('/api/users/login', data)\n            .then(res => {\n                localStorage.setItem('token', res.data.payload);\n                this.props.history.push('/protected');\n            })\n            .catch(err => console.log(err))\n    }\n\n    // handle changes in data on the form\n    const handleChange = e => {\n        setLogin({\n            ...login,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // create and return the form\n    return (\n        // Custom Login form\n        <form onSubmit={handleSubmit(onSubmit)}>\n\n            {/* Username */}<br /><br />\n            <label htmlFor='username'>User Name: &nbsp;</label>\n            <input\n                type='text'\n                name='username'\n                id='username'\n                value={login.username}\n                onChange={handleChange}\n                // defaultValue=\"test\" ref={register}  // register the username input\n                ref={register({ required: true })}  // include the 'required' option\n            />\n            {/* Display username errors */}<br />\n            {errors.username && <p className=\"error-text\">A user name is required.</p>}\n\n            {/* Password */}<br />\n            <label htmlFor='password'>Password: &nbsp;</label>\n            <input\n                type='password'\n                name='password'\n                id='password'\n                value={login.password}\n                onChange={handleChange}\n                ref={register({ required: true })}\n            />\n            {/* Display password errors */}<br />\n            {errors.password && <p className='error-text'>A password is required.</p>}\n\n            {/* Email address */}<br />\n            <label htmlFor='email'>Email: &nbsp;</label>\n            <input\n                type='text'\n                name='email'\n                id='email'\n                ref={register({ required: true })}\n            /> \n            {/* Display email address errors */}<br />\n            {errors.email && <p className='error-text'>Please provide a valid email address.</p>}\n\n            {/* Submit button */}<br /> <br />\n            <button type='submit'>Log In</button>\n        </form >\n    );\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}